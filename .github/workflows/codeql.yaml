name: "CodeQL Advanced"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '42 15 * * 4'

jobs:
  analyze_android:
    name: Analyze Android
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    strategy:
      fail-fast: false
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: java-kotlin
        build-mode: manual

    - name: Setup Node.js environment
      uses: actions/setup-node@v4.0.4
      with:
        node-version: 20.x
        cache: npm
        cache-dependency-path: package-lock.json

    - name: NPM Install
      run: npm install

    - name: Setup Java JDK
      uses: actions/setup-java@v4.4.0
      with:
        java-version: 22
        distribution: adopt
        cache: gradle
        cache-dependency-path: android/build.gradle

    - name: Build APK
      working-directory: android
      run: ./gradlew assembleRelease
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:java-kotlin"


  analyze_ts:
    name: Analyze TypeScript
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    strategy:
      fail-fast: false
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: javascript-typescript
        build-mode: none
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:javascript-typescript"

  analyze_swift:
    name: Analyze Swift
    runs-on: macos-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    strategy:
      fail-fast: false
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: swift
        build-mode: manual

    - name: Setup Node.js environment
      uses: actions/setup-node@v4.0.4
      with:
        node-version: 20.x
        cache: npm
        cache-dependency-path: package-lock.json

    - name: NPM Install
      run: npm install

    - uses: actions/cache@v4
      name: Cache CocoaPods
      with:
        path: ios/Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    - name: Install CocoaPods dependencies
      working-directory: ios
      run: pod install

    - name: Perform CodeQL Analysis - Swift
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:swift"

  analyze_ruby:
    name: Analyze Ruby
    runs-on: macos-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    strategy:
      fail-fast: false
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ruby
        build-mode: manual

    - name: Setup Node.js environment
      uses: actions/setup-node@v4.0.4
      with:
        node-version: 20.x
        cache: npm
        cache-dependency-path: package-lock.json

    - name: NPM Install
      run: npm install

    - uses: actions/cache@v4
      name: Cache CocoaPods
      with:
        path: ios/Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    - name: Install CocoaPods dependencies
      working-directory: ios
      run: pod install

    - name: Perform CodeQL Analysis - Ruby
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:ruby"

  analyze_c:
    name: Analyze C
    runs-on: macos-latest
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    strategy:
      fail-fast: false
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: c-cpp
        build-mode: manual

    - name: Setup Node.js environment
      uses: actions/setup-node@v4.0.4
      with:
        node-version: 20.x
        cache: npm
        cache-dependency-path: package-lock.json

    - name: NPM Install
      run: npm install

    - name: Install the Apple certificate and provisioning profile
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        PROVISION_PROFILES_BASE64: ${{ secrets.PROVISION_PROFILES_BASE64 }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
        # import certificate and provisioning profile from secrets
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
        echo -n "$PROVISION_PROFILES_BASE64" | base64 --decode -o $PP_PATH
        # create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        # import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH
        # apply provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      
    - name: Enable Corepack
      run: corepack enable

    - uses: actions/cache@v4
      name: Cache CocoaPods
      with:
        path: ios/Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    - name: Install CocoaPods dependencies
      working-directory: ios
      run: pod install

    - name: Build archive
      working-directory: ios
      run: |
        xcodebuild -workspace casha.xcworkspace \
        -scheme "casha" \
        -sdk iphoneos \
        -configuration Debug \
        -destination generic/platform=iOS \
        -archivePath $RUNNER_TEMP/casha.xcarchive \
        archive

    - name: Perform CodeQL Analysis - C
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:c-cpp"